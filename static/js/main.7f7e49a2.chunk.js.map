{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","index.js"],"names":["Card","monster","className","alt","src","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","event","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","length","style","color","fontFamily","fontSize","margin","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yUAqBaA,EAAO,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAClB,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAI,UACJC,IAAG,+BAA0BH,EAAQI,GAAlC,4BAEL,6BAAKJ,EAAQK,OACb,4BAAIL,EAAQM,YCKHC,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACtB,qBAAKP,UAAU,YAAf,SACGO,EAASC,KAAI,SAACT,GAAD,OACZ,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQI,UChCZM,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACvB,uBACEX,UAAU,SACVY,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCunBCG,E,kDA/Cb,aAAe,IAAD,8BACZ,gBAcFH,aAAe,SAACI,GAAD,OAAW,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SAZlE,EAAKC,MAAQ,CACXb,SAAU,GACVU,YAAa,IALH,E,qDASd,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKT,SAAS,CAAET,SAAUkB,S,oBAK/C,WACE,MAAkCC,KAAKN,MAA/Bb,EAAR,EAAQA,SAAUU,EAAlB,EAAkBA,YACZU,EAAmBpB,EAASqB,QAAO,SAAC7B,GAAD,OACvCA,EAAQK,KAAKyB,cAAcC,SAASb,EAAYY,kBAElD,OAAQtB,EAASwB,OAYf,sBAAK/B,UAAU,MAAf,UACE,qDACA,kDACA,cAAC,EAAD,CACEU,YAAY,kBACZC,aAAce,KAAKf,eAErB,cAAC,EAAD,CAAUJ,SAAUoB,OAlBtB,oBACEK,MAAO,CACLC,MAAO,UACPC,WAAY,gBACZC,SAAU,OACVC,OAAQ,KALZ,8B,GAxBYC,IAAMC,WC3kBxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.7f7e49a2.chunk.js","sourcesContent":["// import React from \"react\";\r\n\r\n// import \"./card.styles.css\";\r\n\r\n// export const Card = ({props}) => (\r\n//   <div className=\"card-container\">\r\n//     <img\r\n//       alt=\"monster\"\r\n//       src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}\r\n//     />\r\n//     <h2>{props.monster.name}</h2>\r\n//     <p>{props.monster.email}</p>\r\n//   </div>\r\n// );\r\n\r\n// FINAL CODE DESIGN(REFACTOR)\r\n\r\nimport React from \"react\";\r\n\r\nimport \"./card.styles.css\";\r\n\r\nexport const Card = ({ monster }) => (\r\n  <div className=\"card-container\">\r\n    <img\r\n      alt=\"monster\"\r\n      src={`https://robohash.org/${monster.id}?set=set2&size=180x180`}\r\n    />\r\n    <h2>{monster.name}</h2>\r\n    <p>{monster.email}</p>\r\n  </div>\r\n);\r\n","// import React from \"react\";\r\n\r\n// import \"./card-list.styles.css\";\r\n\r\n// export const CardList = (props) => {\r\n//   console.log(props);\r\n//   return <div className=\"card-list\">{props.children}</div>;\r\n// };\r\n\r\n// CODE FOR MOVING THE MAP ARRAY METHOD IN THE APP.JS\r\n\r\n// import React from \"react\";\r\n\r\n// import \"./card-list.styles.css\";\r\n\r\n// import { Card } from \"../card/card.component\";\r\n\r\n// export const CardList = (props) => (\r\n//   <div className=\"card-list\">\r\n//     {props.monsters.map((monster) => (\r\n//       <Card key={monster.id} monster={monster} />\r\n//     ))}\r\n//   </div>\r\n// );\r\n\r\n// FINAL CODE DESIGN(REFACTOR)\r\n\r\nimport React from \"react\";\r\n\r\nimport \"./card-list.styles.css\";\r\n\r\nimport { Card } from \"../card/card.component\";\r\n\r\nexport const CardList = ({ monsters }) => (\r\n  <div className=\"card-list\">\r\n    {monsters.map((monster) => (\r\n      <Card key={monster.id} monster={monster} />\r\n    ))}\r\n  </div>\r\n);\r\n","import React from \"react\";\r\n\r\nimport \"./search-box.styles.css\";\r\n\r\nexport const SearchBox = ({ placeholder, handleChange }) => (\r\n  <input\r\n    className=\"search\"\r\n    type=\"search\"\r\n    placeholder={placeholder}\r\n    onChange={handleChange}\r\n  />\r\n);\r\n","// CODE FOR RENDERING SIMPLE HELLO WORLD\n\n// import React from \"react\";\n\n// import \"./App.css\";\n\n// function App() {\n//   return <h1>Hello World</h1>;\n// }\n\n// export default App;\n\n// CODE FOR RENDERING HELLO WORLD WITH BACKROUND COLOR YELLOW USING 'App.css'\n\n// import React from \"react\";\n\n// import \"./App.css\";\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <h1>Hello World</h1>\n//     </div>\n//   );\n// }\n\n// export default App;\n\n// CODE FOR RENDERING HELLO WORLD USING 'PROPERTIES(PROPS)'\n\n// import React from \"react\";\n\n// import \"./App.css\";\n\n// class App extends React.Component {\n//   constructor() {\n//     super();\n\n//     this.state = {\n//       props: \"World\",\n//     };\n//   }\n\n//   render() {\n//     return <h1>{`Hello ${this.state.props}`}</h1>;\n//   }\n// }\n\n// export default App;\n\n// CODE FOR RENDERING 3 NAMES STATIC USING 'MAP ARRAY METHOD'\n\n// import React from \"react\";\n\n// class App extends React.Component {\n//   constructor() {\n//     super();\n\n//     this.state = {\n//       players: [\n//         {\n//           name: \"Raymund\",\n//         },\n//         {\n//           name: \"Paul\",\n//         },\n//         {\n//           name: \"Fontanilla\",\n//         },\n//       ],\n//     };\n//   }\n\n//   render() {\n//     return (\n//       <div className=\"App\">\n//         {this.state.players.map((player) => (\n//           <h1>{player.name}</h1>\n//         ))}\n//       </div>\n//     );\n//   }\n// }\n\n// export default App;\n\n//ERROR -> index.js:1 Warning: Each child in a list should have a unique \"key\" prop.\n\n//TO FIX THAT PUT AN ID OF EACH PLAYE AND GET IT BY USING key={players.id} LIKE THIS\n\n// import React from \"react\";\n\n// import \"./App.css\";\n\n// class App extends React.Component {\n//   constructor() {\n//     super();\n\n//     this.state = {\n//       players: [\n//         {\n//           id: 1,\n//           name: \"Raymund\",\n//         },\n//         {\n//           id: 2,\n//           name: \"Paul\",\n//         },\n//         {\n//           id: 3,\n//           name: \"Fontanilla\",\n//         },\n//       ],\n//     };\n//   }\n\n//   render() {\n//     return (\n//       <div className=\"App\">\n//         {this.state.players.map((player) => (\n//           <h1 key={player.id}>{player.name}</h1>\n//         ))}\n//       </div>\n//     );\n//   }\n// }\n\n// export default App;\n\n// CODE FOR FETCHING USERS DYNAMIC USING API IN 'https://jsonplaceholder.typicode.com/users' WITH 'componentDidMount() method'\n\n// import React from \"react\";\n\n// import \"./App.css\";\n\n// class App extends React.Component {\n//   constructor() {\n//     super();\n\n//     this.state = {\n//       monsters: [],\n//     };\n//   }\n\n//   componentDidMount() {\n//     fetch(\"https://jsonplaceholder.typicode.com/users\")\n//       .then((response) => response.json())\n//       .then((users) => this.setState({ monsters: users }));\n//   }\n\n//   render() {\n//     return (\n//       <div className=\"App\">\n//         {this.state.monsters.map((monster) => (\n//           <h1 key={monster.id}>{monster.name}</h1>\n//         ))}\n//       </div>\n//     );\n//   }\n// }\n\n// export default App;\n\n// CODE FOR RENDERING CARDLIST COMPONENT USING 'PROPS AND CHILDREN'\n\n// PROPS -> THE PARAMETER THAT WE GET FROM OUR FUNCTIONAL COMPONENT.\n\n// CHILDREN -> ARE ACTUALLY WHAT YOU PASS IN BETWEEN THE BRACKETS OF OUR COMPONENT\n\n// LIKE THIS <CardList><h1>Raymund</h1></CardList>\n\n// import React from \"react\";\n\n// import \"./App.css\";\n\n// import { CardList } from \"./components/card-list/card-list.component.jsx\";\n\n// class App extends React.Component {\n//   constructor() {\n//     super();\n\n//     this.state = {\n//       monsters: [],\n//     };\n//   }\n\n//   componentDidMount() {\n//     fetch(\"https://jsonplaceholder.typicode.com/users\")\n//       .then((response) => response.json())\n//       .then((users) => this.setState({ monsters: users }));\n//   }\n\n//   render() {\n//     return (\n//       <div className=\"App\">\n//         <CardList name=\"Raymund\">\n//           <h1>Raymund</h1>\n//         </CardList>\n//         <div>\n//           {this.state.monsters.map((monster) => (\n//             <h1 key={monster.id}>{monster.name}</h1>\n//           ))}\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n\n// export default App;\n\n// CODE FOR RENDERING RANDOM ROBOTS WITH A STYLE OF CARD CONTAINER USING CARD COMPONENT\n\n// import React from \"react\";\n\n// import { CardList } from \"./components/card-list/card-list.component.jsx\";\n\n// class App extends React.Component {\n//   constructor() {\n//     super();\n\n//     this.state = {\n//       monsters: [],\n//     };\n//   }\n\n//   componentDidMount() {\n//     fetch(\"https://jsonplaceholder.typicode.com/users\")\n//       .then((response) => response.json())\n//       .then((users) => this.setState({ monsters: users }));\n//   }\n\n//   render() {\n//     return (\n//       <div>\n//         <CardList monsters={this.state.monsters} />\n//       </div>\n//     );\n//   }\n// }\n\n// export default App;\n\n// CODE FOR RENDERING SEARCHBOX\n\n// import React from \"react\";\n\n// import { CardList } from \"./components/card-list/card-list.component.jsx\";\n\n// class App extends React.Component {\n//   constructor() {\n//     super();\n\n//     this.state = {\n//       monsters: [],\n//       searchField: \"\",\n//     };\n//   }\n\n//   componentDidMount() {\n//     fetch(\"https://jsonplaceholder.typicode.com/users\")\n//       .then((response) => response.json())\n//       .then((users) => this.setState({ monsters: users }));\n//   }\n\n//   render() {\n//     return (\n//       <div>\n//         <input\n//           type=\"search\"\n//           placeholder=\"search monsters\"\n//           onChange={(e) => this.setState({ searchField: e.target.value })}\n//         />\n//         <CardList monsters={this.state.monsters} />\n//       </div>\n//     );\n//   }\n// }\n\n// export default App;\n\n// CODE FOR FILTERING ROBOTS USING SEARCHFIELD\n\n// import React from \"react\";\n\n// import { CardList } from \"./components/card-list/card-list.component.jsx\";\n\n// class App extends React.Component {\n//   constructor() {\n//     super();\n\n//     this.state = {\n//       monsters: [],\n//       searchField: \"\",\n//     };\n//   }\n\n//   componentDidMount() {\n//     fetch(\"https://jsonplaceholder.typicode.com/users\")\n//       .then((response) => response.json())\n//       .then((users) => this.setState({ monsters: users }));\n//   }\n\n//   render() {\n//     const { monsters, searchField } = this.state;\n//     const filteredMonsters = monsters.filter((monster) =>\n//       monster.name.toLowerCase().includes(searchField.toLowerCase())\n//     );\n//     return (\n//       <div>\n//         <input\n//           type=\"search\"\n//           placeholder=\"search monsters\"\n//           onChange={(e) => this.setState({ searchField: e.target.value })}\n//         />\n//         <CardList monsters={filteredMonsters} />\n//       </div>\n//     );\n//   }\n// }\n\n// export default App;\n\n// CODE FOR FILTERING ROBOTS USING SEARCHBOX COMPONENT\n\n// import React from \"react\";\n\n// import { CardList } from \"./components/card-list/card-list.component.jsx\";\n// import { SearchBox } from \"./components/search-box/search-box.component.jsx\";\n\n// class App extends React.Component {\n//   constructor() {\n//     super();\n\n//     this.state = {\n//       monsters: [],\n//       searchField: \"\",\n//     };\n//   }\n\n//   componentDidMount() {\n//     fetch(\"https://jsonplaceholder.typicode.com/users\")\n//       .then((response) => response.json())\n//       .then((users) => this.setState({ monsters: users }));\n//   }\n\n//   render() {\n//     const { monsters, searchField } = this.state;\n//     const filteredMonsters = monsters.filter((monster) =>\n//       monster.name.toLowerCase().includes(searchField.toLowerCase())\n//     );\n//     return (\n//       <div>\n//         <SearchBox\n//           placeholder=\"search monsters\"\n//           handleChange={(e) => this.setState({ searchField: e.target.value })}\n//         />\n//         <CardList monsters={filteredMonsters} />\n//       </div>\n//     );\n//   }\n// }\n\n// export default App;\n\n// CODE FOR FILTERING ROBOTS USING SEARCHBOX COMPONENT WITH CLASS AND BIND METHOD\n\n// import React from \"react\";\n\n// import \"./App.css\";\n\n// import { CardList } from \"./components/card-list/card-list.component.jsx\";\n// import { SearchBox } from \"./components/search-box/search-box.component.jsx\";\n\n// class App extends React.Component {\n//   constructor() {\n//     super();\n\n//     this.state = {\n//       monsters: [],\n//       searchField: \"\",\n//     };\n//   }\n\n//   componentDidMount() {\n//     fetch(\"https://jsonplaceholder.typicode.com/users\")\n//       .then((response) => response.json())\n//       .then((users) => this.setState({ monsters: users }));\n//   }\n\n//   handleChange(e) {\n//     this.setState({ searchField: e.target.value });\n//   }\n\n//   render() {\n//     const { monsters, searchField } = this.state;\n//     const filteredMonsters = monsters.filter((monster) =>\n//       monster.name.toLowerCase().includes(searchField.toLowerCase())\n//     );\n//     return (\n//       <div className=\"App\">\n//         <SearchBox\n//           type=\"search\"\n//           placeholder=\"search monsters\"\n//           handleChange={this.handleChange}\n//         />\n//         <CardList monsters={filteredMonsters} />\n//       </div>\n//     );\n//   }\n// }\n\n// export default App;\n\n//ERROR\n\n// Cannot read properties of undefined (reading 'setState') at handleChange\n\n// to fix that used bind method in your constructor method like this\n\n// this.handleChange = this.handleChange.bind(this)\n\n// import React from \"react\";\n\n// import \"./App.css\";\n\n// import { CardList } from \"./components/card-list/card-list.component.jsx\";\n// import { SearchBox } from \"./components/search-box/search-box.component.jsx\";\n\n// class App extends React.Component {\n//   constructor() {\n//     super();\n\n//     this.state = {\n//       monsters: [],\n//       searchField: \"\",\n//     };\n\n//     this.handleChange = this.handleChange.bind(this);\n//   }\n\n//   componentDidMount() {\n//     fetch(\"https://jsonplaceholder.typicode.com/users\")\n//       .then((response) => response.json())\n//       .then((users) => this.setState({ monsters: users }));\n//   }\n\n//   handleChange(e) {\n//     this.setState({ searchField: e.target.value });\n//   }\n\n//   render() {\n//     const { monsters, searchField } = this.state;\n//     const filteredMonsters = monsters.filter((monster) =>\n//       monster.name.toLowerCase().includes(searchField.toLowerCase())\n//     );\n//     return (\n//       <div className=\"App\">\n//         <SearchBox\n//           placeholder=\"search monsters\"\n//           handleChange={this.handleChange}\n//         />\n//         <CardList monsters={filteredMonsters} />\n//       </div>\n//     );\n//   }\n// }\n\n// export default App;\n\n// CODE FOR FILTERING ROBOTS USING SEARCHBOX COMPONENT USING ARROW FUNCTION AND WITHOUT BIND METHOD\n\n// import React from \"react\";\n\n// import \"./App.css\";\n\n// import { CardList } from \"./components/card-list/card-list.component.jsx\";\n// import { SearchBox } from \"./components/search-box/search-box.component.jsx\";\n\n// class App extends React.Component {\n//   constructor() {\n//     super();\n\n//     this.state = {\n//       monsters: [],\n//       searchField: \"\",\n//     };\n//   }\n\n//   componentDidMount() {\n//     fetch(\"https://jsonplaceholder.typicode.com/users\")\n//       .then((response) => response.json())\n//       .then((users) => this.setState({ monsters: users }));\n//   }\n\n//   handleChange = (e) => {\n//     this.setState({ searchField: e.target.value });\n//   };\n\n//   render() {\n//     const { monsters, searchField } = this.state;\n//     const filteredMonsters = monsters.filter((monster) =>\n//       monster.name.toLowerCase().includes(searchField.toLowerCase())\n//     );\n\n//     return (\n//       <div className=\"App\">\n//         <SearchBox\n//           placeholder=\"search monsters\"\n//           handleChange={this.handleChange}\n//         />\n//         <CardList monsters={filteredMonsters} />\n//       </div>\n//     );\n//   }\n// }\n\n// export default App;\n\n// CODE FOR FILTERING ROBOTS USING SEARCHBOX COMPONENT USING ARROW FUNCTION, WITHOUT BIND METHOD AND WITH LOADING\n\n// import React from \"react\";\n\n// import \"./App.css\";\n\n// import { CardList } from \"./components/card-list/card-list.component.jsx\";\n// import { SearchBox } from \"./components/search-box/search-box.component.jsx\";\n\n// class App extends React.Component {\n//   constructor() {\n//     super();\n\n//     this.state = {\n//       monsters: [],\n//       searchField: \"\",\n//     };\n//   }\n\n//   componentDidMount() {\n//     fetch(\"https://jsonplaceholder.typicode.com/users\")\n//       .then((response) => response.json())\n//       .then((users) => this.setState({ monsters: users }));\n//   }\n\n//   handleChange = (e) => {\n//     this.setState({ searchField: e.target.value });\n//   };\n\n//   render() {\n//     const { monsters, searchField } = this.state;\n//     const filteredMonsters = monsters.filter((monster) =>\n//       monster.name.toLowerCase().includes(searchField.toLowerCase())\n//     );\n//     if (monsters.length === 0) {\n//       return (\n//         <h2\n//           style={{\n//             color: \"#0ccac4\",\n//             fontFamily: \"Bigelow Rules\",\n//             fontSize: \"50px\",\n//             margin: \"0\",\n//           }}\n//         >\n//           Loading.....\n//         </h2>\n//       );\n//     } else {\n//       return (\n//         <div className=\"App\">\n//           <title>Monsters Rolodex</title>\n//           <h1>Monsters Rolodex</h1>\n//           <SearchBox\n//             placeholder=\"search monsters\"\n//             handleChange={this.handleChange}\n//           />\n//           <CardList monsters={filteredMonsters} />\n//         </div>\n//       );\n//     }\n//   }\n// }\n\n// export default App;\n\n// FINAL CODE DESIGN(REFACTOR)\n\nimport React from \"react\";\n\nimport \"./App.css\";\n\nimport { CardList } from \"./components/card-list/card-list.component.jsx\";\nimport { SearchBox } from \"./components/search-box/search-box.component.jsx\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: \"\",\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((users) => this.setState({ monsters: users }));\n  }\n\n  handleChange = (event) => this.setState({ searchField: event.target.value });\n\n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter((monster) =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n    return !monsters.length ? (\n      <h2\n        style={{\n          color: \"#0ccac4\",\n          fontFamily: \"Bigelow Rules\",\n          fontSize: \"50px\",\n          margin: \"0\",\n        }}\n      >\n        Loading.....\n      </h2>\n    ) : (\n      <div className=\"App\">\n        <title>Monsters Rolodex</title>\n        <h1>Monsters Rolodex</h1>\n        <SearchBox\n          placeholder=\"search monsters\"\n          handleChange={this.handleChange}\n        />\n        <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}